[supervisord]
nodaemon = true

[program:nginx]
command = /nginx.sh
# scrub potentially sensitive environment variables we don't need
environment = AWS_ACCESS_KEY_ID="",
    AWS_SECRET_ACCESS_KEY="",
    DM_ADMIN_USER_IPS="",
    DM_ANTIVIRUS_API_AUTH_TOKENS="",
    DM_ANTIVIRUS_API_CALLBACK_AUTH_TOKENS="",
    DM_API_AUTH_TOKENS="",
    DM_API_CALLBACK_AUTH_TOKENS="",
    DM_APP_AUTH="",
    DM_DATA_API_AUTH_TOKEN="",
    DM_DEV_USER_IPS="",
    DM_DNB_API_PASSWORD="",
    DM_MAILCHIMP_API_KEY="",
    DM_MANDRILL_API_KEY="",
    DM_NOTIFY_API_KEY="",
    DM_SEARCH_API_AUTH_TOKEN="",
    DM_SEARCH_API_AUTH_TOKENS="",
    DM_USER_IPS="",
    SECRET_KEY="",
    SHARED_EMAIL_KEY="",
autostart = true
autorestart = true
stdout_logfile = /var/log/digitalmarketplace/nginx_access.log
stdout_logfile_maxbytes = 50000000
stdout_logfile_backups = 3
stderr_logfile = /dev/stderr
stderr_logfile_maxbytes = 0
stopsignal = STOP
# bosh will probably kill everything after 10s - stop a second early in the hopes that the logs of our
# last handled request make it off the machine
stopwaitsecs = 9

[program:uwsgi]
command = uwsgi --ini /etc/uwsgi.conf --master
directory = /app
autostart = true
autorestart = true
stdout_logfile = /var/log/digitalmarketplace/application.log
stdout_logfile_maxbytes = 50000000
stdout_logfile_backups = 3
stdout_syslog = true
redirect_stderr = true
# USR1 doesn't actually stop uwsgi at all - it prints statistics (!), but we want to hang on as long
# as possible after bosh asks us to shut down to give us a chance to handle as much of the potential
# connection backlog we might have.
stopsignal = USR1
# bosh will probably kill everything after 10s - stop a second early in the hopes that the logs of our
# last handled request make it off the machine
stopwaitsecs = 9

[program:awslogs]
command = /awslogs.sh
# scrub potentially sensitive environment variables we don't need
environment = DM_ADMIN_USER_IPS="",
    DM_ANTIVIRUS_API_AUTH_TOKENS="",
    DM_ANTIVIRUS_API_CALLBACK_AUTH_TOKENS="",
    DM_API_AUTH_TOKENS="",
    DM_API_CALLBACK_AUTH_TOKENS="",
    DM_APP_AUTH="",
    DM_DATA_API_AUTH_TOKEN="",
    DM_DEV_USER_IPS="",
    DM_DNB_API_PASSWORD="",
    DM_MAILCHIMP_API_KEY="",
    DM_MANDRILL_API_KEY="",
    DM_NOTIFY_API_KEY="",
    DM_SEARCH_API_AUTH_TOKEN="",
    DM_SEARCH_API_AUTH_TOKENS="",
    DM_USER_IPS="",
    PROXY_AUTH_CREDENTIALS="",
    SECRET_KEY="",
    SHARED_EMAIL_KEY="",
autostart = true
autorestart = true
stdout_logfile = /dev/stdout
stdout_logfile_maxbytes = 0
stderr_logfile = /var/log/awslogs.log
stderr_logfile_maxbytes = 5000000
stderr_logfile_backups = 3
# we want awslogs to keep running when everything else is shutting down so we don't miss logs
# but supervisord has no option to disable the stopsignal, so we send it HUP but run it under nohup
stopsignal = HUP
# bosh will probably kill us after 10s
stopwaitsecs = 15
